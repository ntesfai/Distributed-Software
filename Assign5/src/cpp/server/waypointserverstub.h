/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_WAYPOINTSERVERSTUB_H_
#define JSONRPC_CPP_STUB_WAYPOINTSERVERSTUB_H_

#include <jsonrpccpp/server.h>

class waypointserverstub : public jsonrpc::AbstractServer<waypointserverstub>
{
    public:
        waypointserverstub(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<waypointserverstub>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("removeWpt", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param01",jsonrpc::JSON_STRING, NULL), &waypointserverstub::removeWptI);
            this->bindAndAddMethod(jsonrpc::Procedure("addWpt", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param01",jsonrpc::JSON_REAL,"param02",jsonrpc::JSON_REAL,"param03",jsonrpc::JSON_REAL,"param04",jsonrpc::JSON_STRING,"param05",jsonrpc::JSON_STRING, NULL), &waypointserverstub::addWptI);
            this->bindAndAddMethod(jsonrpc::Procedure("impjson_file", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT,  NULL), &waypointserverstub::impjson_fileI);
            this->bindAndAddMethod(jsonrpc::Procedure("expjson_file", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN,  NULL), &waypointserverstub::expjson_fileI);
            this->bindAndAddMethod(jsonrpc::Procedure("modWpt", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT, "param01",jsonrpc::JSON_REAL,"param02",jsonrpc::JSON_REAL,"param03",jsonrpc::JSON_REAL,"param04",jsonrpc::JSON_STRING,"param05",jsonrpc::JSON_STRING,"param06",jsonrpc::JSON_STRING, NULL), &waypointserverstub::modWptI);
            this->bindAndAddMethod(jsonrpc::Procedure("get_size", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_INTEGER,  NULL), &waypointserverstub::get_sizeI);
        }

        inline virtual void removeWptI(const Json::Value &request, Json::Value &response)
        {
            response = this->removeWpt(request[0u].asString());
        }
        inline virtual void addWptI(const Json::Value &request, Json::Value &response)
        {
            response = this->addWpt(request[0u].asDouble(), request[1u].asDouble(), request[2u].asDouble(), request[3u].asString(), request[4u].asString());
        }
        inline virtual void impjson_fileI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->impjson_file();
        }
        inline virtual void expjson_fileI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->expjson_file();
        }
        inline virtual void modWptI(const Json::Value &request, Json::Value &response)
        {
            response = this->modWpt(request[0u].asDouble(), request[1u].asDouble(), request[2u].asDouble(), request[3u].asString(), request[4u].asString(), request[5u].asString());
        }
        inline virtual void get_sizeI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->get_size();
        }
        virtual bool removeWpt(const std::string& param01) = 0;
        virtual bool addWpt(double param01, double param02, double param03, const std::string& param04, const std::string& param05) = 0;
        virtual Json::Value impjson_file() = 0;
        virtual bool expjson_file() = 0;
        virtual Json::Value modWpt(double param01, double param02, double param03, const std::string& param04, const std::string& param05, const std::string& param06) = 0;
        virtual int get_size() = 0;
};

#endif //JSONRPC_CPP_STUB_WAYPOINTSERVERSTUB_H_
